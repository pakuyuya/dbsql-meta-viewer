import isvalid from '@/js/isvalid'

describe('isvalid.regex()', () => {
  it('should valid', () => {
    expect(isvalid.regex('^$')).toEqual(true)
    expect(isvalid.regex('()')).toEqual(true)
    expect(isvalid.regex('(a)')).toEqual(true)
    expect(isvalid.regex('^[ab]')).toEqual(true)
    expect(isvalid.regex('^[a-b]')).toEqual(true)
    expect(isvalid.regex('^[a-b]+')).toEqual(true)
    expect(isvalid.regex('[a-b]?')).toEqual(true)
    expect(isvalid.regex('[-b]?')).toEqual(true)
    expect(isvalid.regex('[^-b]?')).toEqual(true)
    expect(isvalid.regex('\\\\+?')).toEqual(true)
    expect(isvalid.regex('a??')).toEqual(true)
    expect(isvalid.regex('a{1}')).toEqual(true)
    expect(isvalid.regex('a{10}')).toEqual(true)
    expect(isvalid.regex('a{1,}')).toEqual(true)
    expect(isvalid.regex('a{100,1}')).toEqual(true)
    expect(isvalid.regex('a{100,10}')).toEqual(true)
    expect(isvalid.regex('a[b*?+[]c+d*ef*')).toEqual(true)
  })
  it('should invvalid', () => {
    expect(isvalid.regex('*')).toEqual(false)
    expect(isvalid.regex('+*')).toEqual(false)
    expect(isvalid.regex('1+*')).toEqual(false)
    expect(isvalid.regex('1+??')).toEqual(false)
    expect(isvalid.regex('(')).toEqual(false)
    expect(isvalid.regex(')')).toEqual(false)
    expect(isvalid.regex('{')).toEqual(false)
    expect(isvalid.regex('|*')).toEqual(false)
    expect(isvalid.regex('|?')).toEqual(false)
    expect(isvalid.regex('[')).toEqual(false)
    expect(isvalid.regex('[]')).toEqual(false)
    expect(isvalid.regex('[a-]')).toEqual(false)
    expect(isvalid.regex('[-]')).toEqual(false)
    expect(isvalid.regex('[^-]')).toEqual(false)
    expect(isvalid.regex('a{')).toEqual(false)
    expect(isvalid.regex('a{}')).toEqual(false)
    expect(isvalid.regex('a{q}')).toEqual(false)
    expect(isvalid.regex('a{1,2,3}')).toEqual(false)
    expect(isvalid.regex('}')).toEqual(false)
    expect(isvalid.regex('aa}')).toEqual(false)
    expect(isvalid.regex('\\')).toEqual(false)
  })
})
